{"version":3,"file":"static/js/736.075487bb.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,IAAH,0JASTC,EAAWD,EAAAA,GAAAA,KAAH,mEAMRE,EAAMF,EAAAA,GAAAA,IAAH,yFAMHG,EAAMH,EAAAA,GAAAA,IAAH,yC,SClBD,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,MAAM,EAAG,IAA5B,GAC3B,GAAE,CAACN,KAGF,SAACT,EAAD,UACGO,EAAOS,KAAI,SAAAC,GAAK,OACf,UAACb,EAAD,WACGa,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,KACXC,MAAM,SAGR,SAACnB,EAAD,KAGF,wBAAKc,EAAMI,QACX,0BACE,SAACnB,EAAD,0BADF,IACoCe,EAAMM,eAblCN,EAAMO,GADD,KAoBtB,C,8LCjCKC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,kGAEoBC,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNC,QAASN,EACTO,SAAU,QACVC,KAAM,EACNC,eAAe,EACfC,MAAOP,KARR,cAEGQ,EAFH,OAWGC,EAASD,EAASE,KAAKC,QAX1B,kBAYIF,GAZJ,gCAcHG,QAAQC,MAAR,MAdG,gFAkBA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBb,EAAAA,GAAAA,IAAA,UAAaH,EAAb,uBAA4C,CACjEI,OAAQ,CACNC,QAASN,KAJV,cAEGW,EAFH,OAOGG,EAAUH,EAASE,KAAKC,QAP3B,kBAQIA,GARJ,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,kGAEoBK,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAA+BF,GAAM,CAC1DM,OAAQ,CACNC,QAASN,EACTO,SAAU,WALX,cAEGI,EAFH,OAQGG,EAAUH,EAASE,KARtB,kBASIC,GATJ,gCAWHC,QAAQC,MAAR,MAXG,gFAeA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAAuBY,GAAvB,kGAEoBK,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEM,OAAQ,CACNC,QAASN,EACTO,SAAU,WALX,cAEGI,EAFH,OAQGtB,EAAOsB,EAASE,KAAKxB,KARxB,kBASIA,GATJ,gCAWH0B,QAAQC,MAAR,MAXG,gFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BpB,GAA1B,kGAEoBK,EAAAA,GAAAA,IAAA,UAAaH,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEM,OAAQ,CACNC,QAASN,EACTO,SAAU,QACVC,KAAM,KANP,cAEGG,EAFH,OASGC,EAASD,EAASE,KAAKC,QAT1B,kBAUIF,GAVJ,gCAYHG,QAAQC,MAAR,MAZG,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 40px;\n  padding: 0 15px;\n  margin-bottom: 30px;\n`;\n\nexport const WrapText = styled.span`\n  font-size: 18px;\n\n  font-weight: 600;\n`;\n\nexport const Img = styled.div`\n  width: 200px;\n  height: 300px;\n  background-color: #dad5d5;\n`;\n\nexport const Box = styled.div`\n  width: 200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { castApi } from 'services/api';\nimport { Container, WrapText, Img, Box } from './Cast.styled';\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    castApi(movieId).then(cast => setActors(cast.slice(0, 14)));\n  }, [movieId]);\n\n  return (\n    <Container>\n      {actors.map(actor => (\n        <Box key={actor.id}>\n          {actor.profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n              alt={actor.name}\n              width=\"200\"\n            />\n          ) : (\n            <Img></Img>\n          )}\n\n          <h3>{actor.name}</h3>\n          <p>\n            <WrapText>Character: </WrapText> {actor.character}\n          </p>\n        </Box>\n      ))}\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a68afe173cef30a4b341939976fb5342';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function moviesApi(movies) {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie/`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: movies,\n      },\n    });\n    const review = response.data.results;\n    return review;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function trendingApi() {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const results = response.data.results;\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function movieDetailsApi(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    const results = response.data;\n    return results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function castApi(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function reviewsApi(id) {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    const review = response.data.results;\n    return review;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Container","styled","WrapText","Img","Box","Cast","useState","actors","setActors","movieId","useParams","useEffect","castApi","then","cast","slice","map","actor","profile_path","src","alt","name","width","character","id","API_KEY","BASE_URL","moviesApi","movies","axios","params","api_key","language","page","include_adult","query","response","review","data","results","console","error","trendingApi","movieDetailsApi","reviewsApi"],"sourceRoot":""}